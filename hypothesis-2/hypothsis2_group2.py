# -*- coding: utf-8 -*-
"""Hypothsis2_Group2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11zxFshIimpS53L7EgcRu5l_dJIf-580y
"""

import pandas as pd
import re
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from datetime import datetime
import seaborn as sns
from IPython.display import Markdown
import plotly.graph_objs as go
import plotly.offline as py
from plotly.subplots import make_subplots
import plotly.express as px

# To read in fatalities
url3='https://dshs.texas.gov/coronavirus/TexasCOVID19DailyCountyFatalityCountData.xlsx'
fatal = pd.read_excel(url3, sheet_name='Fatalities by County', skiprows=2)
fatal=fatal.truncate(before=0,after=253)
fatal.keys()
fatal=fatal.set_index("County Name")

from datetime import datetime
import re
pattern = re.compile('[0-9]+-[0-9]+', re.IGNORECASE)
fatalDates = [datetime.strptime(pattern.findall(sub)[0], '%m-%d') for sub in fatal.keys()]  
fatal.columns=[pattern.findall(sub)[0]for sub in fatal.keys()]
fatal.index=fatal.index.str.title() # This is for all uppercase letters in index names

fatal = fatal.T.copy()

fatal

#Read in cases
import pandas as pd
url = "https://dshs.texas.gov/coronavirus/TexasCOVID19DailyCountyCaseCountData.xlsx" #  sheets 'COVID-19 Cases', 'COVID-19 Fatalities'
df = pd.read_excel(url , sheet_name = 'Cases by County',skiprows=2)
df=df.truncate(before=0,after=253)  # There are extra rows in the file, just remove, should look for last county, but this is easier
df2 = df.set_index('County Name')
from datetime import datetime
import re
pattern = re.compile('[0-9]+-[0-9]+', re.IGNORECASE)
dates = [datetime.strptime(pattern.findall(sub)[0], '%m-%d') for sub in df2.keys()]   
df3 = df2
pattern = re.compile('[0-9]+-[0-9]+', re.IGNORECASE)
df3.columns=[pattern.findall(sub)[0] for sub in df3.keys()]
cases=df3.T.copy()
cases

# read in ICU data
icu = pd.read_excel("https://dshs.texas.gov/coronavirus/CombinedHospitalDataoverTimebyTSA.xlsx", sheet_name= 'COVID-19 ICU', skiprows=2)
icu = icu.truncate(before=0, after=21)
icu

# read in hospitalization 
hosp = pd.read_excel("https://dshs.texas.gov/coronavirus/CombinedHospitalDataoverTimebyTSA.xlsx", sheet_name= 'COVID-19 Hospitalizations', skiprows=2)
hosp = hosp.truncate(before=0, after=21)
#hosp=hosp.T.copy()
hosp

TSA1 = [["Anderson", "Briscoe","Carson" ,"Childress" ,"Collingsworth" ,"Dallam","Deaf Smith","Donley","Gray","Hall","Hansford","Hartley","Hemphill","Hutchinson","Lipscomb","Moore","Ochiltree","Oldham","Parmer","Potter","Randall","Roberts","Sherman","Swisher","Wheeler" ],
        ['Bailey','Borden','Castro','Cochran','Cottle','Crosby','Dawson','Dickens','Floyd','Gaines','Garza','Hale','Hockley','Kent','King','Lamb','Lubbock','Lynn','Motley','Scurry','Terry','Yoakum'],
        ['Archer', 'Baylor','Clay','Foard','Hardeman','Jack','Montague','Wichita','Wilbarger','Young'],
        ['Brown', 'Callahan', 'Coleman', 'Comanche','Eastland', 'Fisher', 'Haskell', 'Jones', 'Knox', 'Mitchell', 'Nolan', 'Shackelford', 
         'Stephens', 'Stonewall', 'Taylor','Throckmorton'],
        ['Collin','Cooke','Dallas','Denton','Ellis','Erath','Fannin','Grayson','Hood','Hunt','Johnson','Kaufman','Navarro','Palo Pinto',
         'Parker','Rockwall','Somervell','Tarrant','Wise'],
        ['Bowie','Cass','Delta','Hopkins','Lamar','Morris','Red River','Titus'],
        ['Anderson', 'Camp','Cherokee','Franklin','Freestone','Gregg','Harrison','Henderson','Houston','Marion','Panola','Rains','Rusk', 
         'Shelby', 'Smith','Trinity','Upshur','Van Zandt','Wood'],
        ['Angelina','Nacogdoches','Polk','Sabine','San Augustine', 'San Jacinto', 'Tyler'],
        ['Culberson','El Paso', 'Hudspeth'],
        ['Andrews','Brewster','Crane','Ector','Glasscock','Howard','Jeff Davis','Loving','Martin','Midland','Pecos','Presidio','Reeves',
         'Terrell','Upton','Ward','Winkler'],
        ['Coke','Concho','Crockett','Irion','Kimble','Mason','Mcculloch','Menard','Reagan','Runnels','Schleicher','Sterling','Sutton',
         'Tom Green'],
        ['Bell','Coryell','Hamilton','Lampasas','Milam','Mills'],
        ['Bosque','Falls','Hill','Limestone','Mclennan'],
        ['Brazos','Burleson','Grimes','Leon','Madison','Robertson','Washington'],
        ['Bastrop','Blanco','Burnet','Caldwell','Fayette','Hays','Lee','Llano','San Saba','Travis','Williamson'],
        ['Atascosa','Bandera','Bexar','Comal','Dimmit','Edwards','Frio','Gillespie','Gonzales','Guadalupe','Karnes','Kendall','Kerr',
         'Kinney','La Salle','Maverick','Medina','Real','Uvalde','Val Verde','Wilson','Zavala'],
        ['Austin','Colorado','Fort Bend','Harris','Matagorda','Montgomery','Walker','Waller','Wharton'],
        ['Brazoria','Chambers','Galveston','Hardin','Jasper','Jefferson','Liberty','Newton','Orange'],
        ['Calhoun','De Witt','Goliad','Jackson','Lavaca','Victoria'],
        ['Jim Hogg','Webb','Zapata'],
        ['Aransas','Bee','Brooks','Duval','Jim Wells','Kenedy', 'Kleberg', 'Live Oak', 'Mcmullen','Nueces','Refugio','San Patricio'],
        ['Cameron','Hidalgo','Starr','Willacy']]

#Extracting TSA A County Data for merging all number of fatalities in for complete TSA 
TSA2 = [["Anderson", "Briscoe","Carson" ,"Childress" ,"Collingsworth" ,"Dallam","Deaf Smith","Donley","Gray","Hall","Hansford","Hartley","Hemphill","Hutchinson","Lipscomb","Moore","Ochiltree","Oldham","Parmer","Potter","Randall","Roberts","Sherman","Swisher","Wheeler" ],
        ['Bailey','Borden','Castro','Cochran','Cottle','Crosby','Dawson','Dickens','Floyd','Gaines','Garza','Hale','Hockley','Kent','King','Lamb','Lubbock','Lynn','Motley','Scurry','Terry','Yoakum'],
        ['Archer', 'Baylor','Clay','Foard','Hardeman','Jack','Montague','Wichita','Wilbarger','Young'],
        ['Brown', 'Callahan', 'Coleman', 'Comanche','Eastland', 'Fisher', 'Haskell', 'Jones', 'Knox', 'Mitchell', 'Nolan', 'Shackelford', 
         'Stephens', 'Stonewall', 'Taylor','Throckmorton'],
        ['Collin','Cooke','Dallas','Denton','Ellis','Erath','Fannin','Grayson','Hood','Hunt','Johnson','Kaufman','Navarro','Palo Pinto',
         'Parker','Rockwall','Somervell','Tarrant','Wise'],
        ['Bowie','Cass','Delta','Hopkins','Lamar','Morris','Red River','Titus'],
        ['Anderson', 'Camp','Cherokee','Franklin','Freestone','Gregg','Harrison','Henderson','Houston','Marion','Panola','Rains','Rusk', 
         'Shelby', 'Smith','Trinity','Upshur','Van Zandt','Wood'],
        ['Angelina','Nacogdoches','Polk','Sabine','San Augustine', 'San Jacinto', 'Tyler'],
        ['Culberson','El Paso', 'Hudspeth'],
        ['Andrews','Brewster','Crane','Ector','Glasscock','Howard','Jeff Davis','Loving','Martin','Midland','Pecos','Presidio','Reeves',
         'Terrell','Upton','Ward','Winkler'],
        ['Coke','Concho','Crockett','Irion','Kimble','Mason','McCulloch','Menard','Reagan','Runnels','Schleicher','Sterling','Sutton',
         'Tom Green'],
        ['Bell','Coryell','Hamilton','Lampasas','Milam','Mills'],
        ['Bosque','Falls','Hill','Limestone','McLennan'],
        ['Brazos','Burleson','Grimes','Leon','Madison','Robertson','Washington'],
        ['Bastrop','Blanco','Burnet','Caldwell','Fayette','Hays','Lee','Llano','San Saba','Travis','Williamson'],
        ['Atascosa','Bandera','Bexar','Comal','Dimmit','Edwards','Frio','Gillespie','Gonzales','Guadalupe','Karnes','Kendall','Kerr',
         'Kinney','La Salle','Maverick','Medina','Real','Uvalde','Val Verde','Wilson','Zavala'],
        ['Austin','Colorado','Fort Bend','Harris','Matagorda','Montgomery','Walker','Waller','Wharton'],
        ['Brazoria','Chambers','Galveston','Hardin','Jasper','Jefferson','Liberty','Newton','Orange'],
        ['Calhoun','DeWitt','Goliad','Jackson','Lavaca','Victoria'],
        ['Jim Hogg','Webb','Zapata'],
        ['Aransas','Bee','Brooks','Duval','Jim Wells','Kenedy', 'Kleberg', 'Live Oak', 'McMullen','Nueces','Refugio','San Patricio'],
        ['Cameron','Hidalgo','Starr','Willacy']]

from scipy import stats
import seaborn as sns
fig = plt.figure(figsize=(12,8), dpi=60)

j=0
for i in range(3,160,30):
  j=j+1
  st=i
  se=st+30
  sp=30
  #-------------------
  fatalR=[fatal[region][st+32:se+32].sum(axis=1) for region in TSA1]  # Sum counties to health region
  FS=[]
  for FR in fatalR:
    FS.append(FR.diff().sum())
  FM=np.divide(FS, sp)

  #--------------------
  casesR=[cases[region][st+32:se+32].sum(axis=1) for region in TSA2]  # Sum counties to health region
  CS=[]  
  for CR in casesR:
    CS.append(CR.diff().sum())
  CM=np.divide(CS, sp)

  #-------------------------------------
  HM=[]
  for i in range(len(hosp)):
    temp=hosp.iloc[i,st:se]
    HM.append(temp.sum()/sp)
  HM=np.array(HM)


  #----------------------------
  ICUM=[]
  for i in range(len(icu)):
    temp=icu.iloc[i,st:se]
    ICUM.append(temp.sum()/len(temp))
  ICUM=np.array(ICUM)

  #--------------------
  X = ICUM/HM
  Y = FM/CM
  ax1 = fig.add_subplot(2,3,j)
  sns.regplot(x=X, y=Y,fit_reg=True,color='blue',line_kws={"color":"orange"})
  ax1.set_xlabel("ICU Mean / Hosp Mean")
  ax1.set_ylabel("Fatal Mean / Cases Mean")
  ax1.text(max(ICUM/HM)*0.75,max(FM/CM)*0.8,'R = '+str(stats.pearsonr(ICUM/HM, FM/CM)[0].round(3)))
  ax1.text(max(ICUM/HM)*0.75,max(FM/CM)*0.9,'Month '+str(j+3))

  #-----------------------------
  print(stats.pearsonr(ICUM/HM, FM/CM))

plt.savefig('compare_month.png',dpi=300)

fig = plt.figure(figsize=(8,7))
for pos, item in enumerate(fatalR):
  ax1 = fig.add_subplot(5,5,pos+1)
  item.diff().plot()

fig = plt.figure(figsize=(8,7))
for i in range(len(icu)):
  item=icu.iloc[i,2:]
  ax1 = fig.add_subplot(5,5,i+1)
  item.plot()





fig = plt.figure(figsize=(12,12))
plt.ylim(0,1)
for i in range(len(fatalR)):
  temp1=icu.iloc[i,2:]
  temp2=hosp.iloc[i,2:]
  ax1 = fig.add_subplot(5,5,i+1)
  ax1.plot(temp1/temp2,color='orange')
  #ax1.plot(fatalR[i]/casesR[i])
print(temp1/temp2)
plt.savefig('icu_hosp.pdf')

casesR[1][85:]

fatalR=[fatal[region][36:].sum(axis=1) for region in TSA1]  # Sum counties to health region
casesR=[cases[region][36:].sum(axis=1) for region in TSA2]  # Sum counties to health region

fig = plt.figure(figsize=(12,12))
plt.ylim(0,0.2)
for i in range(len(fatalR)):
  ax1 = fig.add_subplot(5,5,i+1)
  #ax1.plot(temp1/temp2)
  ax1.plot(fatalR[i].diff()/casesR[i].diff(),color='blue')
plt.savefig('fatal_cases.pdf')

Var1=ICUM/HM
Var2=FM/CM

# Chi Square testing
tb = pd.crosstab(index=Var1>np.mean(Var1), 
                           columns=Var2>np.mean(Var2))#(np.true_divide(Var2,np.mean(Var2))).astype(int)
print(tb)
from scipy.stats import chi2_contingency
tt=chi2_contingency(tb)
print(tt)

#---------------To conduct ANOVA test----------------
from scipy.stats import f_oneway
Var1_t=Var1>np.mean(Var1)
#gp=Var1.groupby('Rt3M_int')

f_oneway(Var2[Var1_t==0],Var2[Var1_t==1])

stats.ttest_ind(Var2[Var1_t==0],Var2[Var1_t==1])